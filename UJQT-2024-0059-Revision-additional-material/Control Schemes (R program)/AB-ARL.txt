######################################################################################
# The R program below calculates the ARL  for the CPD scheme based on the Lepage-AB statistic when parameters shift.
# n0: Sample size for the warm-up data
# lambda: Smoothing parameter
# L: Control limits
# IC case: (loc, sca) = (0, 1) 
# OC case: (loc, sca) = (shift, a) ######################################################################################

ARL<-function(L,shift,a){
  n0<-20
  loop<-10000
  T<-5000

 cl <- makeCluster(detectCores())
 registerDoParallel(cl)

  rls <- foreach(i = 1:loop,.combine = 'c')%dopar%{
      x<-rnorm(n0, 0, 1)  
      for (n in (n0+1):T) {
      y<-rnorm(1, shift, a)
      x<-c(x,y)
      R<-rank(x)
      m<-NULL
      Z<-2
      lambda<-0.1
      for (r in n0:(n-1)) {
#########WAR
    ETW<-(n-r)*(n+1)/2
    SDTW<-r*(n-r)*(n+1)/12
    TW<-sum(R[(r+1):n])
    SW<-(TW-ETW)/sqrt(SDTW)

#########AB
    TAB<-sum(abs(R[(r+1):n]-(n+1)/2)) 
    if (n %% 2 == 0) {
    ETAB<-n*(n-r)/4
    SDTAB<-r*(n-r)*(n^2-4)/(48*(n-1))
    } else {
    ETAB<-(n-r)*(n^2-1)/(4*n)
    SDTAB<-r*(n-r)*(n+1)*(n^2+3)/(48*n^2)
    }
    SAB<-(TAB-ETAB)/sqrt(SDTAB)

#########Lepage Statistic
    S<-SW^2+SAB^2
    Z<-lambda*S+(1-lambda)*Z
    m<-c(m,Z)
      }
      K<-max(m)
      h<-L[n-n0]
      if(K>h|n==T){
        rl<- n-n0
        break
      }
    }
    
    rl
  }
  stopCluster(cl)

  arl<-mean(rls)
  sdrl<-sd(rls)
  quan<-quantile(rls,c(0.1,0.25,0.5,0.75,0.90))
  uqna<-as.numeric(quan)   
  output <- c(shift,arl,sdrl,quan,length(rls))
  return(output)
}


